// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        Int        @id @default(autoincrement())
  name      String?
  role      Role       @default(Student) // Assigns a role from the Roll enum, default is Student

  // Many-to-many relation between students and attendance through StudentAttendance
  attendances StudentAttendance[]
}

model DayAttendance {
  id            Int      @id @default(autoincrement())
  date          DateTime
  code          Int
  expiryTime    Int

  // Many-to-many relation to students through StudentAttendance
  studentsPresent StudentAttendance[]
}

model StudentAttendance {
  studentId      Int
  date           DateTime @default(now()) // Automatically sets the current date and time
  isPresent      Boolean
  attendanceId   Int
  student        User          @relation(fields: [studentId], references: [id])
  attendance     DayAttendance @relation(fields: [attendanceId], references: [id])

  @@id([studentId, attendanceId]) // Composite primary key
}

enum Role {
  Teacher
  Student
  Admin
}
